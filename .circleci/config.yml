version: 2.1
executors:
  default_android:
    shell: /bin/bash --login -eo pipefail
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
    docker:
      - image: cirrusci/flutter:latest
  default_ios:
    shell: /bin/bash --login -eo pipefail
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
    macos:
      # https://circleci.com/docs/2.0/testing-ios/#supported-xcode-versions
      xcode: "12.4.0"

commands:
  install_firebase_cli:
    steps:
      - run:
          name: Install Firebase CLI
          command: curl -sL https://firebase.tools | bash
  download_config:
    steps:
      - run:
          name: Download configs
          command: |
            firebase apps:sdkconfig --project kyouen-vs-dev ANDROID -o android/app/firebase/google-services-dev.json
            firebase apps:sdkconfig --project kyouen-vs-dev IOS -o ios/Runner/Firebase/GoogleService-Info-Dev.plist
            firebase apps:sdkconfig --project kyouen-vs ANDROID -o android/app/firebase/google-services-prod.json
            firebase apps:sdkconfig --project kyouen-vs IOS -o ios/Runner/Firebase/GoogleService-Info-Prod.plist
  run_build_runner:
    steps:
      - run:
          name: Run package get
          command: $FLUTTER_HOME/bin/flutter pub get
      - run:
          name: Run build_runner
          command: $FLUTTER_HOME/bin/flutter pub run build_runner build

  flutter_analyze:
    steps:
      - run:
          name: Run flutter analyze
          command: $FLUTTER_HOME/bin/flutter analyze > flutter_analyze_report.txt || true
      - store_artifacts:
          path: flutter_analyze_report.txt

  run_danger:
    steps:
      - run:
          name: Run Danger
          command: bundle exec danger

  build_apk:
    steps:
      - run:
          name: Build apk
          command: $FLUTTER_HOME/bin/flutter build apk --release --dart-define=BUILD_ENV=dev
  deploy_android_to_firebase:
    steps:
      - run:
          name: Deploy to Firebase App Distribution
          command: |
            APP_ID=`cat android/app/firebase/google-services-dev.json | grep "mobilesdk_app_id" | sed -e "s/^.*\"mobilesdk_app_id\": \"\([0-9a-zA-Z:]*\)\",$/\1/g"`
            firebase appdistribution:distribute \
              build/app/outputs/flutter-apk/app-release.apk \
              --app $APP_ID \
              --release-notes "branch: $CIRCLE_BRANCH, hash: `git rev-parse --short HEAD`"

  install_flutter:
    steps:
      - run:
          name: Install flutter SDK
          command: mkdir -p ~/sdks/flutter && git clone -b stable https://github.com/flutter/flutter.git ~/sdks/flutter
      - run:
          name: Set flutter SDK PATH in bash
          command: echo 'export FLUTTER_HOME=~/sdks/flutter' >> $BASH_ENV && source $BASH_ENV
      - run:
          name: Try doctor
          command: $FLUTTER_HOME/bin/flutter doctor

  install_ruby_gems:
    steps:
      - run:
          name: Run bundle install
          command: bundle install

  build_ipa:
    steps:
      - run:
          name: Install cert
          command: bundle exec fastlane setup_provisioning_profiles
          working_directory: ~/project/ios
      - run:
          name: Build flutter app
          command: $FLUTTER_HOME/bin/flutter build ipa --dart-define=BUILD_ENV=dev --export-options-plist=ios/ExportOptions/dev.plist

jobs:
  lint:
    executor: default_android
    steps:
      - checkout
      - install_firebase_cli
      - download_config
      - run_build_runner
      - flutter_analyze
      - install_ruby_gems
      - run_danger
  build_android:
    executor: default_android
    steps:
      - checkout
      - install_firebase_cli
      - download_config
      - run_build_runner
      - build_apk
      - deploy_android_to_firebase
  build_ios:
    executor: default_ios
    steps:
      - checkout
      - install_firebase_cli
      - download_config
      - install_flutter
      - install_ruby_gems
      - run_build_runner
      - build_ipa

workflows:
  check:
    jobs:
      - lint
  build:
    jobs:
      - build_android:
          filters:
            branches:
              only: improve-ci # TODO "master"
      - build_ios:
          filters:
            branches:
              only: improve-ci # TODO "master"
